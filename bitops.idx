Hamming weight	bitops.html#hamming-weight_1	Module bitops	
countSetBits	bitops.html#countSetBits,SomeInteger	bitops: countSetBits(x: SomeInteger): int	
popcount	bitops.html#popcount,SomeInteger	bitops: popcount(x: SomeInteger): int	
parityBits	bitops.html#parityBits,SomeInteger	bitops: parityBits(x: SomeInteger): int	
firstSetBit	bitops.html#firstSetBit,SomeInteger	bitops: firstSetBit(x: SomeInteger): int	
fastLog2	bitops.html#fastLog2,SomeInteger	bitops: fastLog2(x: SomeInteger): int	
countLeadingZeroBits	bitops.html#countLeadingZeroBits,SomeInteger	bitops: countLeadingZeroBits(x: SomeInteger): int	
countTrailingZeroBits	bitops.html#countTrailingZeroBits,SomeInteger	bitops: countTrailingZeroBits(x: SomeInteger): int	
rotateLeftBits	bitops.html#rotateLeftBits,uint8,range[]	bitops: rotateLeftBits(value: uint8; amount: range[0 .. 8]): uint8	
rotateLeftBits	bitops.html#rotateLeftBits,uint16,range[]	bitops: rotateLeftBits(value: uint16; amount: range[0 .. 16]): uint16	
rotateLeftBits	bitops.html#rotateLeftBits,uint32,range[]	bitops: rotateLeftBits(value: uint32; amount: range[0 .. 32]): uint32	
rotateLeftBits	bitops.html#rotateLeftBits,uint64,range[]	bitops: rotateLeftBits(value: uint64; amount: range[0 .. 64]): uint64	
rotateRightBits	bitops.html#rotateRightBits,uint8,range[]	bitops: rotateRightBits(value: uint8; amount: range[0 .. 8]): uint8	
rotateRightBits	bitops.html#rotateRightBits,uint16,range[]	bitops: rotateRightBits(value: uint16; amount: range[0 .. 16]): uint16	
rotateRightBits	bitops.html#rotateRightBits,uint32,range[]	bitops: rotateRightBits(value: uint32; amount: range[0 .. 32]): uint32	
rotateRightBits	bitops.html#rotateRightBits,uint64,range[]	bitops: rotateRightBits(value: uint64; amount: range[0 .. 64]): uint64	
