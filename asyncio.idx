Asynchronous sockets	asyncio.html#asynchronous-sockets	 Asynchronous sockets	
Getting a blocking client from an AsyncSocket	asyncio.html#getting-a-blocking-client-from-an-asyncsocket	 Getting a blocking client from an AsyncSocket	
DelegateObj	asyncio.html#DelegateObj	asyncio: DelegateObj	
Delegate	asyncio.html#Delegate	asyncio: Delegate	
Dispatcher	asyncio.html#Dispatcher	asyncio: Dispatcher	
AsyncSocket	asyncio.html#AsyncSocket	asyncio: AsyncSocket	
AsyncSocketObj	asyncio.html#AsyncSocketObj	asyncio: AsyncSocketObj	
SockIdle	asyncio.html#SockIdle	SocketStatus.SockIdle	
SockConnecting	asyncio.html#SockConnecting	SocketStatus.SockConnecting	
SockConnected	asyncio.html#SockConnected	SocketStatus.SockConnected	
SockListening	asyncio.html#SockListening	SocketStatus.SockListening	
SockClosed	asyncio.html#SockClosed	SocketStatus.SockClosed	
SockUDPBound	asyncio.html#SockUDPBound	SocketStatus.SockUDPBound	
SocketStatus	asyncio.html#SocketStatus	asyncio: SocketStatus	
newDelegate	asyncio.html#newDelegate,	asyncio: newDelegate(): Delegate	
asyncSocket	asyncio.html#asyncSocket,Domain,SockType,Protocol	asyncio: asyncSocket(domain: Domain = AF_INET; typ: SockType = SOCK_STREAM;\n            protocol: Protocol = IPPROTO_TCP; buffered = true): AsyncSocket	
toAsyncSocket	asyncio.html#toAsyncSocket,Socket,SocketStatus	asyncio: toAsyncSocket(sock: Socket; state: SocketStatus = SockConnected): AsyncSocket	
connect	asyncio.html#connect,AsyncSocket,string,Domain	asyncio: connect(sock: AsyncSocket; name: string; port = Port(0); af: Domain = AF_INET)	
close	asyncio.html#close,AsyncSocket	asyncio: close(sock: AsyncSocket)	
bindAddr	asyncio.html#bindAddr,AsyncSocket,string	asyncio: bindAddr(sock: AsyncSocket; port = Port(0); address = &quot;&quot;)	
listen	asyncio.html#listen,AsyncSocket	asyncio: listen(sock: AsyncSocket)	
acceptAddr	asyncio.html#acceptAddr,AsyncSocket,AsyncSocket,string	asyncio: acceptAddr(server: AsyncSocket; client: var AsyncSocket; address: var string)	
accept	asyncio.html#accept,AsyncSocket,AsyncSocket	asyncio: accept(server: AsyncSocket; client: var AsyncSocket)	
acceptAddr	asyncio.html#acceptAddr,AsyncSocket	asyncio: acceptAddr(server: AsyncSocket): tuple[sock: AsyncSocket, address: string]	
accept	asyncio.html#accept,AsyncSocket	asyncio: accept(server: AsyncSocket): AsyncSocket	
newDispatcher	asyncio.html#newDispatcher,	asyncio: newDispatcher(): Dispatcher	
register	asyncio.html#register,Dispatcher,Delegate	asyncio: register(d: Dispatcher; deleg: Delegate)	
register	asyncio.html#register,Dispatcher,AsyncSocket	asyncio: register(d: Dispatcher; sock: AsyncSocket): Delegate	
unregister	asyncio.html#unregister,Dispatcher,Delegate	asyncio: unregister(d: Dispatcher; deleg: Delegate)	
isWriteable	asyncio.html#isWriteable,AsyncSocket	asyncio: isWriteable(s: AsyncSocket): bool	
getSocket	asyncio.html#getSocket.c,AsyncSocket	asyncio: getSocket(s: AsyncSocket): Socket	
isConnected	asyncio.html#isConnected,AsyncSocket	asyncio: isConnected(s: AsyncSocket): bool	
isListening	asyncio.html#isListening,AsyncSocket	asyncio: isListening(s: AsyncSocket): bool	
isConnecting	asyncio.html#isConnecting,AsyncSocket	asyncio: isConnecting(s: AsyncSocket): bool	
isClosed	asyncio.html#isClosed,AsyncSocket	asyncio: isClosed(s: AsyncSocket): bool	
isSendDataBuffered	asyncio.html#isSendDataBuffered,AsyncSocket	asyncio: isSendDataBuffered(s: AsyncSocket): bool	
setHandleWrite	asyncio.html#setHandleWrite,AsyncSocket,proc(AsyncSocket)	asyncio: setHandleWrite(s: AsyncSocket;\n               handleWrite: proc (s: AsyncSocket) {.closure, gcsafe.})	
delHandleWrite	asyncio.html#delHandleWrite,AsyncSocket	asyncio: delHandleWrite(s: AsyncSocket)	
recvLine	asyncio.html#recvLine,AsyncSocket,TaintedString	asyncio: recvLine(s: AsyncSocket; line: var TaintedString): bool	
readLine	asyncio.html#readLine,AsyncSocket,TaintedString	asyncio: readLine(s: AsyncSocket; line: var TaintedString): bool	
send	asyncio.html#send,AsyncSocket,string	asyncio: send(sock: AsyncSocket; data: string)	
poll	asyncio.html#poll,Dispatcher,int	asyncio: poll(d: Dispatcher; timeout: int = 500): bool	
len	asyncio.html#len,Dispatcher	asyncio: len(disp: Dispatcher): int	
