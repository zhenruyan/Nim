wwwNL	httpserver.html#wwwNL	httpserver: wwwNL	
serveFile	httpserver.html#serveFile,Socket,string	httpserver: serveFile(client: Socket; filename: string)	
Server	httpserver.html#Server	httpserver: Server	
PAsyncHTTPServer	httpserver.html#PAsyncHTTPServer	httpserver: PAsyncHTTPServer	
open	httpserver.html#open,Server	httpserver: open(s: var Server; port = Port(80); reuseAddr = false)	
port	httpserver.html#port,Server	httpserver: port(s: var Server): Port	
next	httpserver.html#next,Server	httpserver: next(s: var Server)	
close	httpserver.html#close,Server	httpserver: close(s: Server)	
run	httpserver.html#run,proc(Socket,string,string)	httpserver: run(handleRequest: proc (client: Socket; path, query: string): bool {.closure.};\n    port = Port(80))	
asyncHTTPServer	httpserver.html#asyncHTTPServer,proc(PAsyncHTTPServer,Socket,string,string),string	httpserver: asyncHTTPServer(handleRequest: proc (server: PAsyncHTTPServer; client: Socket;\n                                   path, query: string): bool {.closure, gcsafe.};\n                port = Port(80); address = &quot;&quot;; reuseAddr = false): PAsyncHTTPServer	
register	httpserver.html#register,Dispatcher,PAsyncHTTPServer	httpserver: register(d: Dispatcher; s: PAsyncHTTPServer)	
close	httpserver.html#close,PAsyncHTTPServer	httpserver: close(h: PAsyncHTTPServer)	
