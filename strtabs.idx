modeCaseSensitive	strtabs.html#modeCaseSensitive	StringTableMode.modeCaseSensitive	
modeCaseInsensitive	strtabs.html#modeCaseInsensitive	StringTableMode.modeCaseInsensitive	
modeStyleInsensitive	strtabs.html#modeStyleInsensitive	StringTableMode.modeStyleInsensitive	
StringTableMode	strtabs.html#StringTableMode	strtabs: StringTableMode	
StringTableObj	strtabs.html#StringTableObj	strtabs: StringTableObj	
StringTableRef	strtabs.html#StringTableRef	strtabs: StringTableRef	
len	strtabs.html#len,StringTableRef	strtabs: len(t: StringTableRef): int	
pairs	strtabs.html#pairs.i,StringTableRef	strtabs: pairs(t: StringTableRef): tuple[key, value: string]	
keys	strtabs.html#keys.i,StringTableRef	strtabs: keys(t: StringTableRef): string	
values	strtabs.html#values.i,StringTableRef	strtabs: values(t: StringTableRef): string	
useEnvironment	strtabs.html#useEnvironment	FormatFlag.useEnvironment	
useEmpty	strtabs.html#useEmpty	FormatFlag.useEmpty	
useKey	strtabs.html#useKey	FormatFlag.useKey	
FormatFlag	strtabs.html#FormatFlag	strtabs: FormatFlag	
`[]`	strtabs.html#[],StringTableRef,string	strtabs: `[]`(t: StringTableRef; key: string): var string	
getOrDefault	strtabs.html#getOrDefault,StringTableRef,string,string	strtabs: getOrDefault(t: StringTableRef; key: string; default: string = &quot;&quot;): string	
hasKey	strtabs.html#hasKey,StringTableRef,string	strtabs: hasKey(t: StringTableRef; key: string): bool	
contains	strtabs.html#contains,StringTableRef,string	strtabs: contains(t: StringTableRef; key: string): bool	
`[]=`	strtabs.html#[]=,StringTableRef,string,string	strtabs: `[]=`(t: StringTableRef; key, val: string)	
newStringTable	strtabs.html#newStringTable,StringTableMode	strtabs: newStringTable(mode: StringTableMode): StringTableRef	
clear	strtabs.html#clear,StringTableRef,StringTableMode	strtabs: clear(s: StringTableRef; mode: StringTableMode)	
newStringTable	strtabs.html#newStringTable,varargs[string],StringTableMode	strtabs: newStringTable(keyValuePairs: varargs[string]; mode: StringTableMode): StringTableRef	
newStringTable	strtabs.html#newStringTable,varargs[tuple[string,string]],StringTableMode	strtabs: newStringTable(keyValuePairs: varargs[tuple[key, val: string]];\n               mode: StringTableMode = modeCaseSensitive): StringTableRef	
`%`	strtabs.html#%,string,StringTableRef,set[FormatFlag]	strtabs: `%`(f: string; t: StringTableRef; flags: set[FormatFlag] = {}): string	
`$`	strtabs.html#$,StringTableRef	strtabs: `$`(t: StringTableRef): string	
